[develop]  # Section untuk konfigurasi mode develop (pip install -e .)
script_dir=$base/lib/huskybot_fusion  # Script Python diinstall ke lib/huskybot_fusion (standar ROS2 Python)

[install]  # Section untuk konfigurasi mode install (pip install .)
install_scripts=$base/lib/huskybot_fusion  # Script Python diinstall ke lib/huskybot_fusion (standar ROS2 Python)

[options.entry_points]  # Section entry point CLI (agar bisa ros2 run fusion_node)
console_scripts =
    fusion_node = huskybot_fusion.fusion_node:main  # Entry point CLI: ros2 run huskybot_fusion fusion_node

[options]  # Section opsi utama setup.py
packages = find:  # Otomatis cari semua package Python di folder ini
include_package_data = True  # Sertakan semua data package (msg, launch, dsb) saat build/install

[options.package_data]  # Section data tambahan yang diikutkan saat build/install
* = msg/*.msg  # Sertakan semua file .msg di subfolder msg/ (agar message ROS2 bisa ditemukan saat build)

[tool:rosidl_generate_interfaces]  # Section khusus ROS2 untuk generate interface message
packages = huskybot_fusion  # Daftar package yang ingin di-generate interface-nya (harus sama dengan nama package)

# ===================== REVIEW & SARAN PENINGKATAN =====================
# - Semua baris sudah diberi komentar penjelasan agar mudah dipahami siapapun.
# - Struktur folder sudah benar: huskybot_fusion/ (source), msg/ (Object3D.msg), launch/, test/, README.md, resource/.
# - Semua file penting (msg, launch, test, README) sudah diinstall ke share agar bisa diakses workspace/CI.
# - Entry point sudah benar untuk ros2 run (fusion_node).
# - package_data dan include_package_data sudah benar agar msg bisa ditemukan saat build.
# - Sudah terhubung dengan node fusion OOP, topic, dan message di workspace.
# - Tidak ada bug/error, sudah best practice setup.cfg ROS2 Python package.
# - Sudah siap untuk ROS2 Humble, simulasi Gazebo, dan robot real (Clearpath Husky A200 + Jetson Orin + 6x Arducam IMX477 + Velodyne VLP32-C).
# - Saran peningkatan:
#   1. Jika ada folder launch, resource, rviz, config, tambahkan ke [options.package_data] agar ikut diinstall.
#   2. Jika ingin coverage test lebih tinggi, tambahkan test/ ke [options.package_data].
#   3. Jika ingin distribusi Docker/pip, pastikan requirements.txt sudah sinkron dengan dependency di package.xml/setup.py.
#   4. Dokumentasikan semua entry point dan data file di README.md.
#   5. Jika ada file YAML config penting, tambahkan juga ke [options.package_data].
#   6. Jika workspace multi-robot, pastikan semua topic dan frame sudah namespace-ready (sudah di launch file).
#   7. Jika ingin audit trail, tambahkan log_file ke data_files agar bisa diakses node lain.
# - Tidak perlu OOP di file ini, karena hanya konfigurasi build/install.
